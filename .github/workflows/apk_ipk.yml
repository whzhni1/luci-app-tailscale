name: "APK + IPK"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "1️⃣ 检出代码"
        uses: actions/checkout@v4

      - name: "2️⃣ 设置版本号和 tag"
        id: version
        run: |
          set -e
          ver="1.2.6"
          base="v${ver}-persistent"
          resp=$(curl -s -o /tmp/tag.json -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$base")
          if [ "$resp" = "200" ]; then
            suffix=$(date -u +%Y%m%d-%H%M%S)
            base="${base}-${suffix}"
          fi
          echo "version=$ver" >> $GITHUB_OUTPUT
          echo "tag=$base" >> $GITHUB_OUTPUT

      - name: "3️⃣ 拉取 luci-app-tailscale 源码并做持久化替换"
        run: |
          set -e
          SRC_DIR=$PWD/src/luci-app-tailscale
          mkdir -p src
          git clone https://github.com/asvow/luci-app-tailscale "$SRC_DIR"
          cd "$SRC_DIR"
          sed -i "s|/etc/tailscale|/etc/config/tailscale-data|g" $(grep -rl "/etc/tailscale" .)
          echo "SRC_DIR=$SRC_DIR" >> $GITHUB_ENV

      - name: "4️⃣ 下载 ImmortalWrt 主线 SDK"
        run: |
          set -e
          SDK_URL="https://downloads.immortalwrt.org/snapshots/targets/x86/generic/immortalwrt-sdk-x86-generic_gcc-14.3.0_musl.Linux-x86_64.tar.zst"
          curl -LO "$SDK_URL"
          tar --use-compress-program=unzstd -xf "$(basename "$SDK_URL")"
          SDK_DIR=$(find . -maxdepth 1 -type d -name "immortalwrt-sdk-*" -print -quit)
          mv "$SDK_DIR" immortalwrt-sdk
          echo "SDK_DIR=$PWD/immortalwrt-sdk" >> $GITHUB_ENV

      - name: "5️⃣ 初始化 SDK 环境"
        run: |
          set -e
          cd "$SDK_DIR"
          
          echo "src-git packages https://github.com/immortalwrt/packages.git" > feeds.conf
          echo "src-git luci https://github.com/immortalwrt/luci.git" >> feeds.conf
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          cp -r "$SRC_DIR" package/luci-app-tailscale

      - name: "6️⃣ 编译 IPK 格式"
        run: |
          set -e
          cd "$SDK_DIR"
          
          # 配置为 IPK 模式（不启用 APK）
          cat > .config <<EOF
          CONFIG_PACKAGE_luci-app-tailscale=y
          CONFIG_PACKAGE_luci-i18n-tailscale-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-tailscale-zh-tw=y
          EOF
          
          make defconfig
          make package/luci-app-tailscale/compile V=s -j2
          make package/feeds/luci/luci-i18n-tailscale-zh-cn/compile V=s -j2 || true
          make package/feeds/luci/luci-i18n-tailscale-zh-tw/compile V=s -j2 || true
          make package/index V=s
          
          # 保存 IPK 文件
          mkdir -p ../out
          cp -v bin/packages/*/*tailscale*.ipk ../out/ 2>/dev/null || true
          
          echo "=== IPK 文件已收集 ==="
          ls -lh ../out/

      - name: "7️⃣ 切换到 APK 模式并重新打包"
        run: |
          set -e
          cd "$SDK_DIR"
          
          # 重新配置为 APK 模式
          cat > .config <<EOF
          CONFIG_TARGET_PACKAGING_APK=y
          CONFIG_PACKAGE_luci-app-tailscale=y
          CONFIG_PACKAGE_luci-i18n-tailscale-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-tailscale-zh-tw=y
          EOF
          
          make defconfig
          
          # 清理旧的包索引，重新生成（这会转换为 APK）
          rm -rf bin/packages/*/base/Packages*
          make package/index V=s
          
          # 保存 APK 文件
          cp -v bin/packages/*/*tailscale*.apk ../out/ 2>/dev/null || true
          
          echo "=== APK 文件已收集 ==="
          ls -lh ../out/

      - name: "8️⃣ 最终产物检查"
        if: always()
        run: |
          echo "=== 最终产物列表 ==="
          ls -lh out/ || true
          echo ""
          echo "=== IPK 文件 ==="
          ls -lh out/*.ipk 2>/dev/null || echo "未找到 IPK"
          echo ""
          echo "=== APK 文件 ==="
          ls -lh out/*.apk 2>/dev/null || echo "未找到 APK"

      - name: "9️⃣ 发布 Release"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ steps.version.outputs.tag }}"
          name: "luci-app-tailscale ${{ steps.version.outputs.version }}（ImmortalWrt APK + IPK）"
          files: "out/*"
          body: |
            ## 📦 包含文件
            - **IPK 格式**：适用于传统 OpenWrt/ImmortalWrt (opkg)
            - **APK 格式**：适用于 ImmortalWrt 主线新版 (apk)
            
            ## 🔧 持久化配置
            - 数据路径：`/etc/config/tailscale-data`
            
            ## 📥 安装方法
            ```bash
            # IPK 方式（传统系统）
            opkg install luci-app-tailscale*.ipk
            
            # APK 方式（新版系统）
            apk add --allow-untrusted luci-app-tailscale*.apk
            ```
